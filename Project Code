from picamera2 import Picamera2
import cv2
from ultralytics import YOLO
import pygame  # For audio playback

# Initialize Pi Camera
picam2 = Picamera2()
camera_config = picam2.create_preview_configuration(main={"format": "RGB888", "size": (640, 480)})
picam2.configure(camera_config)
picam2.start()

# Load YOLOv8 Nano model
model = YOLO('/home/pi/Desktop/ACSproject/runs/detect/train/weights/best.pt')

# Initialize pygame mixer
pygame.mixer.init()

# Paths to audio files
cow_audio_path = r'/home/pi/Desktop/ACSproject/8khz_cow.mp3'
elephant_audio_path = r'/home/pi/Desktop/ACSproject/10khz_elephant.mp3'

# Confidence threshold
confidence_threshold = 0.01

try:
    while True:
        # Capture image from Pi Camera
        frame = picam2.capture_array()

        # Perform YOLO detection
        results = model(frame)
        
        # Annotate the frame
        annotated_frame = results[0].plot()

        # Process detections
        for result in results:
            boxes = result.boxes
            if boxes is not None:
                for box in boxes:
                    # Get bounding box details
                    x1, y1, x2, y2 = box.xyxy[0]
                    conf = box.conf[0]
                    cls = box.cls[0]

                    # Check confidence and actuation
                    if conf >= confidence_threshold:
                        label = model.names[int(cls)]  # Get class label (e.g., "cow", "elephant")
                        print(f"Detected: {label} with confidence {conf:.2f}")

                        if label.lower() == "cow":
                            print("Cow detected! Playing cow sound...")
                            pygame.mixer.music.load(cow_audio_path)
                            pygame.mixer.music.play()
                            while pygame.mixer.music.get_busy():
                                pass  # Wait until the sound finishes playing

                        elif label.lower() == "elephant":
                            print("Elephant detected! Playing elephant sound...")
                            pygame.mixer.music.load(elephant_audio_path)
                            pygame.mixer.music.play()
                            while pygame.mixer.music.get_busy():
                                pass  # Wait until the sound finishes playing

        # Display the annotated frame
        cv2.imshow("YOLOv8 Detection", annotated_frame)

        # Break on 'q' key press
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

except KeyboardInterrupt:
    print("Interrupted by user")

# Release resources
cv2.destroyAllWindows()
pygame.mixer.quit()
